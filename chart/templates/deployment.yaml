apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}-controller-manager
  labels:
    control-plane: controller-manager
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args: {{- toYaml .Values.controllerManager.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        {{- if .Values.controllerManager.manager.defaultEndpointSecret.name }}
        {{- with .Values.controllerManager.manager.defaultEndpointSecret }}
        - name: DEFAULT_S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: {{ .name }}
              key: {{ .endpointKey | default "endpoint" }}
        - name: DEFAULT_S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .name }}
              key: {{ .accessKey | default "accessKey"  }}
        - name: DEFAULT_S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .name }}
              key: {{ .secretKey | default "secretKey"  }}
        {{- end }}              
        {{- end }}
        {{- if .Values.controllerManager.manager.defaultRegion }}
        - name: DEFAULT_S3_REGION
          value: {{ .Values.controllerManager.manager.defaultRegion }}
        {{- end }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.controllerManager.manager.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
      securityContext: {{- toYaml .Values.controllerManager.podSecurityContext | nindent
        8 }}
      serviceAccountName: {{ include "chart.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10